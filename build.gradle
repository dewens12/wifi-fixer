//noinspection GradleCompatible
/*
 * Wifi Fixer for Android
 *        Copyright (C) 2010-2016  David Van de Ven
 *
 *        This program is free software: you can redistribute it and/or modify
 *        it under the terms of the GNU General Public License as published by
 *        the Free Software Foundation, either version 3 of the License, or
 *        (at your option) any later version.
 *
 *        This program is distributed in the hope that it will be useful,
 *        but WITHOUT ANY WARRANTY; without even the implied warranty of
 *        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *        GNU General Public License for more details.
 *
 *        You should have received a copy of the GNU General Public License
 *        along with this program.  If not, see http://www.gnu.org/licenses
 */

buildscript {
    ext.kotlin_version = '1.2.50'


    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
        google()
        mavenCentral()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0-alpha18'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

    }
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'checkstyle'
apply plugin: 'pmd'


repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://jitpack.io"
    }
    google()

}

dependencies {
    implementation 'androidx.core:core:1.0.0-alpha3'
    implementation 'androidx.preference:preference:1.0.0-alpha3'
    implementation 'androidx.vectordrawable:vectordrawable:1.0.0-alpha3'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0-alpha3'
    implementation 'androidx.annotation:annotation:1.0.0-alpha3'
    implementation 'androidx.appcompat:appcompat:1.0.0-alpha3'
    implementation 'com.google.android.material:material:1.0.0-alpha3'
    implementation 'androidx.test:runner:1.1.0-alpha3'
    implementation 'androidx.test.espresso:espresso-core:3.1.0-alpha3'
    implementation 'androidx.databinding:databinding-runtime:3.2.0-alpha18'
    implementation 'androidx.databinding:databinding-common:3.2.0-alpha18'
    implementation 'androidx.databinding:databinding-adapters:3.2.0-alpha18'
    implementation 'com.android.databinding:compiler:3.1.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

android {
    packagingOptions {
        exclude 'AndroidManifest.xml'
    }
    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFile "proguard-project.txt"
            compileSdkVersion 28
            buildToolsVersion "28.0.0"
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            minifyEnabled false
            compileSdkVersion 28
            buildToolsVersion "28.0.0"
        }
    }
    if (project.hasProperty("storeFile")) {
        android.signingConfigs.release.storeFile = file(storeFile)
    }
    if (project.hasProperty("storePassword")) {
        android.signingConfigs.release.storePassword = storePassword
    }
    if (project.hasProperty("keyAlias")) {
        android.signingConfigs.release.keyAlias = keyAlias
    }
    if (project.hasProperty("keyPassword")) {
        android.signingConfigs.release.keyPassword = keyPassword
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // instrumentTest.setRoot('tests')
    }
    defaultConfig {
        minSdkVersion 25
       targetSdkVersion 28

    }
    productFlavors {
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.0 rc2'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    checkstyle {
        toolVersion = '8.1' // optionally specify tool version
    }

    pmd {
        toolVersion = '5.8.1' // optionally specify tool version
    }

    tasks.withType(Checkstyle) {
        ignoreFailures = true // REQUIRED because the plugin will report only up to the point the first issue if this is not set
        showViolations = false

        reports {
            xml.enabled = true  // REQUIRED the plugin parses xml reports so this is essential
        }

        include '**/*.java'
    }

    tasks.withType(Pmd) {
        ignoreFailures = true // REQUIRED because the plugin will report only up to the point the first issue if this is not set

        reports {
            xml.enabled = true  // REQUIRED the plugin parses xml reports so this is essential
        }

        include '**/*.java'
    }
    dexOptions {
    }
}